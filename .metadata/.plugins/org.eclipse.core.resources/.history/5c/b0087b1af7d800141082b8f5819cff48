import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.List;
import java.util.ArrayList;

public class Jungle {

	private List<Animal> animals = new ArrayList<Animal>();

	public Jungle() {
		super();
		Animal t = new Tiger();
		animals.add(t);
		Animal m = new Monkey();
		animals.add(m);
		Animal s = new Snake();
		animals.add(s);
	}

	public static void main(String[] args) {
		System.out.println("Welcome to the Jungle");
		Jungle jungle = new Jungle();
		jungle.soundOff();
		jungle.doRandomAction();
	}

	public void soundOff() {
		for (Animal animal : animals) {
			animal.speak();
		}
	}

	public void doRandomAction() {
		for (Animal animal : animals) {
			Method[] methods = animal.getClass().getMethods();
			for (Method method : methods) {
				System.out.println("method = " + method.getName());
			}

			try {
				methods[2].invoke(animal, Food.FISH);
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			animal.speak();
		}
	}

}